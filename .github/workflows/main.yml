Let's make sure your updated `main.yml` is **correctly structured and syntactically valid**.

---

### âœ… Corrected `main.yml` (with proper YAML structure):

Here's a clean, fixed version of your workflow, especially focusing on **line 27** (most likely where `echo` was incorrectly placed):

```yaml
name: DevSecOps CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  security-scans:
    name: Static Security Scans
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: tfsec - Terraform Security Scan
        uses: aquasecurity/tfsec-action@v1.0.0

      - name: Trivy - Docker Security Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'table'
          exit-code: '0'
          severity: 'CRITICAL,HIGH'

  deploy:
    name: Apply Sealed Secrets + Deploy to K8s
    needs: security-scans
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_B64 }}" | base64 --decode > $HOME/.kube/config

      - name: Restore sealed cert
        run: |
          echo "${{ secrets.SEALED_CERT }}" | base64 --decode > mycert.pem

      - name: Generate sealed secret from GitHub secret
        run: |
          echo "
          apiVersion: v1
          kind: Secret
          metadata:
            name: mysecret
            namespace: default
          type: Opaque
          stringData:
            password: '${{ secrets.SECRET_PASSWORD }}'
          " > secret.yaml

          kubeseal --cert mycert.pem --format yaml < secret.yaml > sealed-secrets/sealedsecret.yaml

      - name: Apply sealed secret
        run: kubectl apply -f sealed-secrets/sealedsecret.yaml

      - name: Apply application deployment
        run: kubectl apply -f k8s/deployment.yaml