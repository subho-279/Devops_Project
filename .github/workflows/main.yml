name: DevSecOps CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  security-scans:
    name: Static Security Scans
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: tfsec - Terraform Security Scan
        uses: aquasecurity/tfsec-action@v1.0.0

      - name: Trivy - Docker Security Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          ignore-unfixed: true
          format: table
          exit-code: 0
          severity: CRITICAL,HIGH

  deploy:
    name: Apply Sealed Secrets + Deploy to K8s
    needs: security-scans
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.28.0

      - name: Set up kubeconfig and Minikube certs
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/.kube/config

          mkdir -p $HOME/.minikube/profiles/minikube
          echo "${{ secrets.MINIKUBE_CLIENT_CRT }}" | base64 --decode > $HOME/.minikube/profiles/minikube/client.crt
          echo "${{ secrets.MINIKUBE_CLIENT_KEY }}" | base64 --decode > $HOME/.minikube/profiles/minikube/client.key
          
          mkdir -p $HOME/.minikube
          echo "${{ secrets.MINIKUBE_CA_CRT }}" | base64 --decode > $HOME/.minikube/ca.crt

      - name: Restore sealed cert
        run: |
          echo "${{ secrets.SEALED_CERT }}" | base64 --decode > mycert.pem

      - name: Install kubeseal
        run: |
          wget https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.23.0/kubeseal-0.23.0-linux-amd64.tar.gz
          tar -xzf kubeseal-0.23.0-linux-amd64.tar.gz
          sudo install kubeseal /usr/local/bin/kubeseal

      - name: Generate sealed secret from GitHub secret
        run: |
          echo "
          apiVersion: v1
          kind: Secret
          metadata:
            name: mysecret
            namespace: default
          type: Opaque
          stringData:
            password: '${{ secrets.SECRET_PASSWORD }}'
          " > secret.yaml
          
          mkdir -p sealed-secrets
          kubeseal --cert mycert.pem --format yaml < secret.yaml > sealed-secrets/sealedsecret.yaml

      - name: Apply sealed secret
        run: kubectl apply -f sealed-secrets/sealedsecret.yaml

      - name: Apply application deployment
        run: kubectl apply -f k8s/deployment.yaml